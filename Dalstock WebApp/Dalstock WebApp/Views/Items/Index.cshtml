@model IEnumerable<Domain.Item>

@{
    ViewBag.Title = "Index";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Materiaal</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Home</a>
            </li>
            <li class="active">
                <strong>Materiaal</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">

                    <div class="ibox-tools">
                        <h4 class="pull-left">Lijst van materialen in voorraad</h4>
                        @Html.ActionLink("Voeg Materiaal toe", "Create", null, new { @class = "btn btn-primary" })
                    </div>
                </div>

                <div class="ibox-content">
                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ItemId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Amount)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {

                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ItemId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Amount)
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Edit","Items", new { id = item.ItemId })" class="btn btn-white btn-xs"><i class="fa fa-pencil"></i>  </a>
                                        <a href="@Url.Action("Delete","Items", new { id = item.ItemId })" class="btn btn-danger btn-xs"><i class="fa fa-remove"></i>  </a>
                                    </td>
                                </tr>

                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                info: false,
                buttons: [
                    { extend: 'csv' },
                    {
                        extend: 'excel', title: 'ExampleFile', exportOptions: {
                            columns: [0, 1, 2]
                        }  },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'portrait',
                        pageSize: 'LEGAL',
                        exportOptions: {
                            columns: [0, 1, 2]
                        },
                        customize: function (doc) {
                            var tblBody = doc.content[1].table.body;
                            // ***
                            //This section creates a grid border layout
                            // ***
                            doc.content[1].layout = {
                                hLineWidth: function (i, node) {
                                    return (i === 0 || i === node.table.body.length) ? 1 : 1;
                                },
                                vLineWidth: function (i, node) {
                                    return (i === 0 || i === node.table.widths.length) ? 1 : 1;
                                },
                                hLineColor: function (i, node) {
                                    return (i === 0 || i === node.table.body.length) ? 'black' : 'gray';
                                },
                                vLineColor: function (i, node) {
                                    return (i === 0 || i === node.table.widths.length) ? 'black' : 'gray';
                                }
                            };
                            // ***
                            //This section loops thru each row in table looking for where either
                            //the second or third cell is empty.
                            //If both cells empty changes rows background color to '#FFF9C4'
                            //if only the third cell is empty changes background color to '#FFFDE7'
                            // ***
                            $('#tableID').find('tr').each(function (ix, row) {
                                var index = ix;
                                var rowElt = row;
                                $(row).find('td').each(function (ind, elt) {
                                    if (tblBody[index][1].text == '' && tblBody[index][2].text == '') {
                                        delete tblBody[index][ind].style;
                                        tblBody[index][ind].fillColor = '#FFF9C4';
                                    }
                                    else {
                                        if (tblBody[index][2].text == '') {
                                            delete tblBody[index][ind].style;
                                            tblBody[index][ind].fillColor = '#FFFDE7';
                                        }
                                    }
                                });
                            });
                        }
                    },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');
                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                            $(win.document.body).find('table').find('td:nth-child(4),th:nth-child(4)').hide();
                        }
                    }
                ]

            });
        });

    </script>
}